---
layout: post
title:  "[leetcode]19. 删除链表的倒数第N个节点"
date:   2020-08-22 19:09
tags: leetcode
color: rgb(106,90,205)
cover: '../coverimages/leetcode.jpg'
---

```
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。

示例：

给定一个链表: 1->2->3->4->5, 和 n = 2.

当删除了倒数第二个节点后，链表变为 1->2->3->5.
说明：

给定的 n 保证是有效的。

进阶：

你能尝试使用一趟扫描实现吗？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
```

> 链表问题 双指针，从虚拟头节点开始，第一个指针先走N，然后一起走，当第一个指针到最后的时候，即可以删除

```golang
func removeNthFromEnd(head *ListNode, n int) *ListNode {
	if head == nil {
		return head
	}
	dh := &ListNode{}
	dh.Next = head
	p1 := dh
	p2 :=dh
	for n > 0 {
		p1 = p1.Next
		n--
	}
	
	for p1.Next != nil {
		p1 = p1.Next
		p2 = p2.Next
	}
	
	p2.Next = p2.Next.Next
	return dh.Next
}
```